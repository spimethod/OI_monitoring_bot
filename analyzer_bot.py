import os
import time
import psycopg2
from telegram import Bot

# --- –ì–õ–ê–í–ù–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ---
# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –≤ Railway
DATABASE_URL = os.environ.get('DATABASE_URL')
TELEGRAM_BOT_TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN')
TELEGRAM_CHAT_ID = os.environ.get('TELEGRAM_CHAT_ID')

# –ü–æ—Ä–æ–≥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–ª–µ—Ä—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ OI –≤—ã—Ä–æ—Å –±–æ–ª–µ–µ —á–µ–º –Ω–∞ 5% –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —á–∞—Å–∞)
OI_GROWTH_ALERT_THRESHOLD = 5.0 

# –ö–∞–∫ —á–∞—Å—Ç–æ –±–æ—Ç –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
CHECK_INTERVAL_SECONDS = 60 * 5 # –ö–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç

# --- –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –° –ë–ê–ó–û–ô –î–ê–ù–ù–´–• ---

def get_db_connection():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö PostgreSQL."""
    try:
        conn = psycopg2.connect(DATABASE_URL)
        return conn
    except Exception as e:
        print(f"[DB Error] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None

def get_tokens_with_new_data(conn):
    """–ù–∞—Ö–æ–¥–∏—Ç —Ç–æ–∫–µ–Ω—ã, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å 2 –∏–ª–∏ –±–æ–ª–µ–µ –∑–∞–ø–∏—Å–µ–π, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –≤—Ä–µ–º–µ–Ω–∏."""
    query = """
        SELECT token_symbol FROM oi_data
        GROUP BY token_symbol
        HAVING COUNT(*) >= 2;
    """
    try:
        with conn.cursor() as cur:
            cur.execute(query)
            # fetchall() –≤–µ—Ä–Ω–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä [('BTC',), ('ETH',)]
            # –ú—ã –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –µ–≥–æ –≤ –ø—Ä–æ—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ ['BTC', 'ETH']
            tokens = [item[0] for item in cur.fetchall()]
            return tokens
    except Exception as e:
        print(f"[DB Error] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–∫–µ–Ω–æ–≤: {e}")
        return []

def get_last_two_records(conn, token_symbol):
    """–ü–æ–ª—É—á–∞–µ—Ç –¥–≤–µ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞."""
    query = """
        SELECT id, oi_growth_4h FROM oi_data
        WHERE token_symbol = %s
        ORDER BY scan_time DESC
        LIMIT 2;
    """
    try:
        with conn.cursor() as cur:
            cur.execute(query, (token_symbol,))
            records = cur.fetchall()
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º (id_—Å—Ç–∞—Ä–æ–π, oi_—Å—Ç–∞—Ä–æ–µ), (id_–Ω–æ–≤–æ–π, oi_–Ω–æ–≤–æ–µ)
            if len(records) == 2:
                # fetchall –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞–ø–∏—Å–∏ –æ—Ç –Ω–æ–≤—ã—Ö –∫ —Å—Ç–∞—Ä—ã–º, –ø–æ—ç—Ç–æ–º—É –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º
                return records[1], records[0] 
            return None, None
    except Exception as e:
        print(f"[DB Error] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∑–∞–ø–∏—Å–∏ –¥–ª—è {token_symbol}: {e}")
        return None, None

def delete_old_records(conn, record_id_to_delete):
    """–£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—É—é –∑–∞–ø–∏—Å—å –ø–æ –µ–µ ID."""
    query = "DELETE FROM oi_data WHERE id = %s;"
    try:
        with conn.cursor() as cur:
            cur.execute(query, (record_id_to_delete,))
            conn.commit()
            print(f"[DB] –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è –∑–∞–ø–∏—Å—å —Å ID {record_id_to_delete}.")
    except Exception as e:
        print(f"[DB Error] –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å —Å ID {record_id_to_delete}: {e}")
        conn.rollback()

# --- –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –û–¢–ü–†–ê–í–ö–ò –í TELEGRAM ---

async def send_telegram_alert(message):
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram."""
    try:
        bot = Bot(token=TELEGRAM_BOT_TOKEN)
        await bot.send_message(chat_id=TELEGRAM_CHAT_ID, text=message)
        print(f"[Telegram] –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.")
    except Exception as e:
        print(f"[Telegram Error] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {e}")

# --- –û–°–ù–û–í–ù–û–ô –¶–ò–ö–õ –ê–ù–ê–õ–ò–ó–ê–¢–û–†–ê ---
if __name__ == "__main__":
    print("--- –ó–ê–ü–£–°–ö –°–ï–†–í–ò–°–ê-–ê–ù–ê–õ–ò–ó–ê–¢–û–†–ê OI ---")
    
    if not all([DATABASE_URL, TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID]):
        print("[CRITICAL] –ù–µ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (DATABASE_URL, TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID) —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")
    else:
        # –î–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
        import asyncio

        while True:
            print(f"\n--- {datetime.now(timezone.utc).strftime('%Y-%m-%d %H:%M:%S')} | –ù–∞—á–∞–ª–æ —Ü–∏–∫–ª–∞ –∞–Ω–∞–ª–∏–∑–∞ ---")
            conn = get_db_connection()
            if conn:
                # 1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–∫–µ–Ω–æ–≤, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —á—Ç–æ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å
                tokens_to_analyze = get_tokens_with_new_data(conn)
                print(f"–ù–∞–π–¥–µ–Ω–æ {len(tokens_to_analyze)} —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")

                for token in tokens_to_analyze:
                    # 2. –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∏ –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–∫–µ–Ω–∞
                    previous_record, latest_record = get_last_two_records(conn, token)
                    
                    if previous_record and latest_record:
                        prev_id, prev_oi = previous_record
                        latest_id, latest_oi = latest_record

                        # 3. –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –ø–æ—Ä–æ–≥–æ–º
                        print(f"  > –ê–Ω–∞–ª–∏–∑ {token}: –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ OI Growth = {latest_oi:.2f}%")
                        if latest_oi >= OI_GROWTH_ALERT_THRESHOLD:
                            # 4. –ï—Å–ª–∏ –ø–æ—Ä–æ–≥ –ø—Ä–µ–≤—ã—à–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–ª–µ—Ä—Ç
                            message = (
                                f"üöÄ **–ê–ª–µ—Ä—Ç –ø–æ —Ä–æ—Å—Ç—É OI** üöÄ\n\n"
                                f"–¢–æ–∫–µ–Ω: **{token}**\n"
                                f"–†–æ—Å—Ç OI –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —á–∞—Å–∞: **{latest_oi:.2f}%**\n"
                                f"(–ü—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {prev_oi:.2f}%)"
                            )
                            # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É
                            asyncio.run(send_telegram_alert(message))
                        
                        # 5. –£–¥–∞–ª—è–µ–º —Å–∞–º—É—é —Å—Ç–∞—Ä—É—é –∑–∞–ø–∏—Å—å (–ø–æ–∑–∞–ø—Ä–æ—à–ª—É—é)
                        # –≠—Ç–æ—Ç —à–∞–≥ –ª—É—á—à–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ —É–±–µ–¥–∏–º—Å—è, —á—Ç–æ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.
                        # –ü–æ–∫–∞ —á—Ç–æ –º—ã —É–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω—é—é (—Å—Ç–∞—Ä—É—é) –∏–∑ –¥–≤—É—Ö –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö.
                        delete_old_records(conn, prev_id)

                conn.close()

            # 6. "–ó–∞—Å—ã–ø–∞–µ–º" –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
            print(f"--- –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω. –°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ {CHECK_INTERVAL_SECONDS / 60:.0f} –º–∏–Ω—É—Ç. ---")
            time.sleep(CHECK_INTERVAL_SECONDS)